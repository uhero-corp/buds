=========================================
JavaScript入門
=========================================

Hello, World!
=======================

| それではJavaScriptについて勉強していきたいと思います。
| JavaScriptはHTML内に記述することができます。
| headタグ内、もしくはbodyタグ内に下記のような記述をしたHTMLファイルを作成してみてください。

    .. code-block:: html
	
	   <script type="text/javascript">
	   <!--
	   document.write("Hello, World!");
	   // -->
	   </script>
	   
| 作成したHTMLファイルをブラウザで確認してみましょう。
| Hello, World! と表示されたら成功です。
|  

外部JavaScriptファイル(.js)
------------------------------

| JavaScriptもCSSと同様に、基本的にHTMLファイルから分離させます。
| 以下の１行を書いたファイルをsample.jsという名前で作成してください。

    .. code-block:: js
	
	  document.write("It Works!!");
	  
	  
| そして、このjsファイルを読み込むためのHTMLファイルを作成します。
| hello.jsと同じ階層に以下のようなファイルを作成してください。

     .. code-block:: html
	 
	   <script type="text/javascript" src="sample.js"></script>
	
| うまく外部ファイルを読み込めましたでしょうか？
| It Works!!と表示されたら成功です。


コメント
==========

コードを記述する中で、「何の処理なのかメモしたい」とか「他の人が見たときに分かり易いようにコメントを書こう」ということがよくあります。
JavaScript中にコメントを記述するには、コメントにしたい文章の頭に「//」を書きます。


.. code-block:: javascript

   //ここは表示されません。



| 「//」以降はコメントとして認識され、javascriptの実行時に無視されます。行の途中からコメントを記述することもできます。


.. code-block:: javascript

   alert("Hello World"); //ハローワールド



| 上記の場合、「alert("Hello World");」は実行されますが、「//ハローワールド」はコメントとして扱われ無視されます。
| また、複数行に渡るコメントも設定可能です。


.. code-block:: javascript

   /*
   ここの領域は
   コメントとして
   扱われ
   無視されます
   */


| /\*と\*/で囲まれた部分はコメントとなります。
| Javascriptに限った話ではなく、後々のためにも、そして他の人のためにもプログラムには適時コメントを書き残しておきましょう。


行末
========

| プログラムを書く際、「ココからココまでが1つの処理だよ！」ということを認識させてあげる必要があります。日本語の文章で言うところの句点です。
| 言語によっては改行が1つの処理を表すこともありますが、JavaScriptでは『;(セミコロン)』を使います。

.. code-block:: javascript

   document.write("Hello World!!");


| は、「Hello World!! と表示します。」という意味のプログラムで、document.write("Hello World!!")で1つの処理が終わる事を意味していました。
| 複数行のプログラムを記述する際、セミコロンが抜けてしまったら


.. code-block:: javascript

   document.write("Hello World!!")document.write("Hello Japan!!");


| document.write("Hello World!!")document.write("Hello Japan!!"); で一つの処理と認識されてしまい、文法エラーとなってしまいます。
| 日本語で考えてみると「Hello World!! と表示しますHello Japan!! と表示します。」です。
| 慣れないうちはセミコロンを忘れてしまいがちです。エラーが出たら先ずセミコロンがもれていないか確認してみるとよいでしょう。



データ型
==========


**文字列型**

    | JavaScriptに『文字列(String)』を記述する場合、文字列全体を『"(ダブルクオート)』あるいは「'(シングルクオート)」で括ります。

    .. code-block:: javascript

       document.write("Hello World!!");


    | はwrite関数に「Hello World」という文字列を渡したいから「"」で括られていたことがわかりますね。

    .. code-block:: javascript

       document.write('Hello World!!');


    | でも同じ挙動になります。
    | 
    | ひとつ注意しなければならないのが、文字列の中でシングルクオートやダブルクオートを使いたい場合です。

    .. code-block:: javascript

       document.write("<a href="index.html">リンクだよ</a>");


    | と書きたくなりますが、""の間が文字列と認識されるので、「<a href=」と「>リンクだよ</a>」という2つの文字列、そして間のindex.htmlというナニかである、と解釈されてしまいます。
    | 後述のエスケープシーケンスを使うか、或いは

    .. code-block:: javascript

       document.write("<a href='index.html'>リンクだよ</a>");
       document.write('<a href="index.html">リンクだよ</a>');


    | のように、ダブル(シングル)クオート中でシングル(ダブル)クオートを使うことで回避できます。


**数値型**

    | JavaScriptに『数値』を記述する場合は括る必要性はありません。

    .. code-block:: javascript

       var a = 5;
       var b = 3;

**論理型**

    | 論理型はtrue,もしくはfalseであらわされる2項の型です。これも括る必要性はありません。

    .. code-block:: javascript

       var flag_a = true;
       var flag_b = false;

**ヌル型**

    | nullは有効な値が存在しないということを表すための値です。これも括る必要性はありません。

    .. code-block:: javascript

       var num = null;



デバッガの使い方
==================

| デバッガは、何行目にどういうエラーが出ているかを教えてくれるツールです。
| これを使いこなせるととても便利なので、使う習慣を身につけましょう。

.. image:: error.png


**Google Chrome、IEの場合**
    F12キーでデバッガを立ち上げることができます。


**FireFoxの場合**
    | FireFoxにはFirebugというアドオンがあります。下記のURLから入手できます。
    | https://addons.mozilla.org/ja/firefox/addon/1843/ これを使うと、構文のエラー等、エラーの内容を表示してくれます。


| また、デバッガにはプログラムを特定に位置で中断するブレークポイント機能や、一段階ごとに実行するステップ実行などがついています。

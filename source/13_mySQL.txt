====================
 mySQL入門
====================

mySQLとは
============================

| mySQLはリレーショナルデータベースマネジメントシステムの一種です。
| 世界で最も普及しているオープンソース・データベースでもあります。
| 
| mySQLを利用することでPHPなどで利用するデータを保存や管理することができます。
| 

リレーショナルデータベースを利用するメリット
========================================================

| データベースは巨大なデータを効率よく利用することが出来ます。
| 全データを読み込まなくても必要なデータをピンポイントで取り出すことが出来ます。
|
| リレーショナルデータベースは、行と列で構成される表で表現できるような関係性を持ったデータを管理するのに特に向いています。
| 


リレーショナルデータベースの構造
==================================================

「会員」

======== ======= ==============================
会員番号    年齢    名前
======== ======= ==============================
 0        25      山本健介
 1        36      川島忠
 2        82      梅沢誠信
 3        19      今井幸太
 4        45      森田和一
 5        65      花澤三郎
======== ======= ==============================


| データベース中にはこのような構造の表を複数入れることが出来ます。
| この表のことをテーブルと言います。
| テーブル名は「会員」になります。
| 各列の名前である「会員番号」、「年齢」、「名前」のことをカラム名と言います。
| 


.. note::

    実際には日本語のテーブル名やカラム名はあまり使われません。英字を使用するようにしましょう。


| 上記の例で、会員番号は同じ番号が複数回現れることはありません。
| このようなカラムのことを主キー（プライマリーキー）と呼びます。
| プライマリーキーの特徴は
| ・値の重複がない
| ・データは必ず入力しなければならない
| ことです。
| プライマリーキーには数字の連番が使われることも多いです。


SQLを操作してみよう
==========================================

| Windowsならコマンドプロンプト、Macならターミナルを開いて、
| mysqlにアクセスしましょう。
| 
| XAMPP環境の場合（初期値）



.. code-block:: bat

    cd C:\xampp\mysql\bin
    mysql -h localhost -u root

| MAMP環境の場合（初期値）

.. code-block:: bat

    cd /Applications/MAMP/Library/bin
    ./mysql -u root -p

| MAMP環境の場合、パスワードの初期値がrootとなっているようです。



データベースの作成
============================================


ユーザーの作成
========================================


データ型
======================================


テーブルの作成方法
===============================================


データの入れ方
==========================================


データの探し方
===============================


複数のテーブルを接続する
=======================================

| リレーショナルデータベースでは複数のテーブルを接続して管理することがあります。
| 
| 例えば、「誰がどの商品を注文したか」をデータベースに保存したいと思います。
| 「誰が」には、名前の他に、住所、電話番号、年齢、性別が含まれるとします。
| 「どの商品」には、商品名の他に、価格、メーカー名、型番が含まれているとします。
| 
| これを一つの表に表すとこうなります。

======== ================ ================ ================= ============== ============== ========== =========== =========== =======
 注文id     注文者氏名        注文者住所     注文者電話番号    注文者年齢     注文者性別    商品名       価格        メーカー      型番
======== ================ ================ ================= ============== ============== ========== =========== =========== =======
 0        山田太郎           藤沢市            0466000000        30              男            冷蔵庫      50000       日立        H-F1
 1        川島忠            中央区             0300000000        36              男            冷蔵庫      50000       日立        H-F1
 2        山田太郎           藤沢市            0466000000        30              男            洗濯機      40000       松下        P-S1
 3        山田太郎           藤沢市            0466000000        30              男            電池        100         三洋        S-D1
 4        山田太郎           藤沢市            0466000000        30              男            自転車      40000       松下        P-Z1
 5        山田太郎           藤沢市            0466000000        30              男            扇風機      8000        日立        H-K1
======== ================ ================ ================= ============== ============== ========== =========== =========== =======

| もし、この状態で、山田太郎の住所が変更された場合、山田太郎が注文したもの全てを書き換える必要が出てしまいます。
| また、商品の価格を変更する場合も同様です。
| 
| この状態で、さらに「商品をお気に入りに登録に登録する新機能」を追加しようとしたとします。
| すると、上記の表とそっくりな表がもう一個必要になります。
| そうなった状態で、商品名の価格が変わった場合はどうなるでしょうか？
| ２つのテーブルの該当するデータを全て書き直す必要があります。
| これではあまりにも非合理的です。

| そこで、リレーショナルデータベースではこのような場合、複数のテーブルで管理するのが一般的です。
| 

user

======== =========== ========== ============== ========== ========== 
 id        氏名        住所         電話番号        年齢       性別 
======== =========== ========== ============== ========== ==========
 0        山田太郎      藤沢市      0466000000    30          男   
 1        川島忠        中央区      0300000000    36          男   
======== =========== ========== ============== ========== ==========


product

======== ========== =========== =========== =======
 id        商品名       価格       メーカー     型番
======== ========== =========== =========== =======
 0        冷蔵庫      50000       日立        H-F1
 1        洗濯機      40000       松下        P-S1
 2        電池        100         三洋        S-D1
 3        自転車      40000       松下        P-Z1
 4        扇風機      8000        日立        H-K1
======== ========== =========== =========== =======


order

======== ============= =============
 id       user_id       product_id
======== ============= =============
 0        0             0
 1        1             0
 2        0             1
 3        0             2
 4        0             3
 5        0             4
======== ============= =============
 
 
| このようにすることで、山田太郎の住所や商品の価格が変更されても変更するのは一箇所で済むようになります。
| orderのテーブルには、ユーザーidと商品idが含まれています。
| このIDをたどることで、必要なデータにアクセスすることが出来ます。
| これを 【外部キー】と言います。


外部キー制約
-------------------

    .. note::
       外部キー制約はInnoDB型テーブルでのみ利用できます。


| 外部キーをMySQLで管理する仕組みとして、外部キー制約があります。
| 

.. code-block:: mysql

    CREATE TABLE テーブル名(カラム名 データ型,FOREIGN KEY (このテーブルで外部キー制約するカラム名)REFERENCES 参照するテーブル名(参照するテーブルのカラム名));

| テーブルを作成するときに、このようにすることで、外部キー制約をすることができます。
| 
| 上記のuser、product、orderの場合は、orderからuserとproductを参照します。
| この場合は、注文のテーブルを作成する時に

.. code-block:: mysql

    CREATE TABLE order(id INT,user_id INT,product_id INT,
	FOREIGN KEY (user_id)REFERENCES user(id),
	FOREIGN KEY (product_id)REFERENCES product(id),
	);

| こうすることで、参照先のテーブルに存在しないIDを入れることを出来なくすることが出来ます。 
| また、参照先で他のテーブルから参照されているデータを削除するとエラーになります。




phpmyadmin
====================================

